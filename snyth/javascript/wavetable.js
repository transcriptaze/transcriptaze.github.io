import{S as a,h as e}from"./sn-fc04f381.js";import"./notes-715bae62.js";const t=Math.PI,s=2*Math.PI,r=720,n=r*Float32Array.BYTES_PER_ELEMENT,l=6*n,o=2*l,i=l,h=0*n,b=h,w=h+n,v=2*n,y=v,f=v+n,c=4*n,R=c,A=c+n;class F extends a{constructor(){super("wavetable",25),this.sab.wavetable=new SharedArrayBuffer(2*o),this.wavetable={version:0,"Œî":[0,0,0],sn:[{RL:new Float32Array(this.sab.wavetable,0+b,r),RR:new Float32Array(this.sab.wavetable,0+w,r),GL:new Float32Array(this.sab.wavetable,0+y,r),GR:new Float32Array(this.sab.wavetable,0+f,r),BL:new Float32Array(this.sab.wavetable,0+R,r),BR:new Float32Array(this.sab.wavetable,0+A,r)},{RL:new Float32Array(this.sab.wavetable,i+b,r),RR:new Float32Array(this.sab.wavetable,i+w,r),GL:new Float32Array(this.sab.wavetable,i+y,r),GR:new Float32Array(this.sab.wavetable,i+f,r),BL:new Float32Array(this.sab.wavetable,i+R,r),BR:new Float32Array(this.sab.wavetable,i+A,r)}]};const a=s/r;for(let e=0;e<2;e++)for(let t=0;t<r;t++)this.wavetable.sn[e].RL[t]=0*Math.sin(t*a),this.wavetable.sn[e].RR[t]=0*Math.sin(t*a),this.wavetable.sn[e].GL[t]=0*Math.sin(2*t*a),this.wavetable.sn[e].GR[t]=0*Math.sin(2*t*a),this.wavetable.sn[e].BL[t]=0*Math.sin(4*t*a),this.wavetable.sn[e].BR[t]=0*Math.sin(4*t*a);this.port.postMessage({message:"wavetable",sab:this.sab.wavetable,N:r,pages:2,version:this.wavetable.version})}onMessage(a){if("load"===a.data.message)this.onLoad(a);else super.onMessage(a)}onLoad(a){this.wavetable.version=a.data.version,this.wavetable.Œî=a.data.parameters.map((a=>a["ùúì"]*t/180)),this.envelope=a.data.envelope}notefn(){return(a,e,t)=>t>this.threshold?this.genfn0(a,e):this.genfn(a,e)}genfn0(a,e,t){return{snl:new Float32Array(e),snr:new Float32Array(e)}}genfn(a,t){const n=new Float32Array(t),l=new Float32Array(t),o=r,i=s*a.frequency/this.fs,h=(e,t)=>{const r=function(a,e,t){for(;a<0;)a+=t;return a%t}(e*o/s,a.frequency,o),n=Math.floor(r)%o,l=Math.ceil(r)%o,i=r%1;return(1-i)*t[n]+i*t[l]},b=this.wavetable.version%2,w=[this.wavetable.sn[b].RL,this.wavetable.sn[b].GL,this.wavetable.sn[b].BL],v=[this.wavetable.sn[b].RR,this.wavetable.sn[b].GR,this.wavetable.sn[b].BR],y=new Float32Array(t);for(let e=0;e<t;e++)y[e]=a.alpha+e*i;const f=[e(this.wavetable.Œî[0]*this.patchbay[13]),e(this.wavetable.Œî[1]*this.patchbay[21]),e(this.wavetable.Œî[2]*this.patchbay[29])],c=f.map((e=>a.frequency*e["ùúìl"])),R=f.map((e=>a.frequency*e["ùúìr"]));for(const[a,e]of w.entries())for(let s=0;s<t;s++)n[s]+=h(y[s]+c[a],e);for(const[a,e]of v.entries())for(let s=0;s<t;s++)l[s]+=h(y[s]+R[a],e);return{snl:n,snr:l}}}try{console.log("... registering wavetable"),registerProcessor("wavetable",F),console.log("... registered wavetable")}catch(a){console.error(`${a}`)}
